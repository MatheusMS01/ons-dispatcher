<!DOCTYPE html>
<html>
<head>
   <link rel="stylesheet" href="../css/bootstrap.css" />
   <script src="../js/jquery-3.2.1.js"></script>
   <script src="../js/bootstrap.min.js"></script>
</head>

<body>
   <header>
      <% include template/header.ejs %>
   </header>

   <!--Gambiarra!!?!!-->
   <p id="result" hidden><%= results %></p>

   <div class="container mt-5">

      <% var allKeys = [] %>
      <% var tmp = JSON.parse(results) %>
      <% for(var index in tmp) { %>
      <% var result = JSON.parse(tmp[index].result) %>
      <% const keys = Object.keys(result) %>
      <% for(var key in keys) { %>
      <% allKeys.push(keys[key]) %>
      <% } %>
      <% } %>

      <% var unique = [...new Set(allKeys)]; %>

      <div id="btn-group" class="p-5">
         <label class="mr-sm-2" for="inlineFormCustomSelect">X Axis:</label>
         <select id="x-axis" class="custom-select mb-2 mr-sm-2 mb-sm-0">
            <% for(var statistic in unique) { %>
            <option value="<%= unique[statistic] %>"><%= unique[statistic] %></option>
            <% } %>
         </select>

         <label class="mr-sm-2" for="inlineFormCustomSelect">Y Axis:</label>
         <select id="y-axis" class="custom-select mb-2 mr-sm-2 mb-sm-0">
            <% for(var statistic in unique) { %>
            <option value="<%= unique[statistic] %>"><%= unique[statistic] %></option>
            <% } %>
         </select>

         <div class="btn-group">
            <button type="button" onclick="generateChart()" class="btn btn-success" aria-haspopup="true" aria-expanded="false">
               Plot
            </button>
         </div>
      </div>

      <% include template/footer.ejs %>
   </div> <!-- /container -->


   <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.js"></script>
   <script>
      function generateChart() {

         var results = JSON.parse(document.getElementById("result").innerHTML);

         var x_axis = document.getElementById("x-axis");
         var y_axis = document.getElementById("y-axis");

         if ((x_axis.options[x_axis.selectedIndex] === undefined) || (y_axis.options[y_axis.selectedIndex] === undefined)) {
            // No values so far
            return;
         }

         var x_axisValue = x_axis.options[x_axis.selectedIndex].value;
         var y_axisValue = y_axis.options[y_axis.selectedIndex].value;

         var datasets = [];

         for (var i = 0; i < 2; ++i)
         {
            var x_axisArray = [];
            var y_axisArray = [];

            var sampleX = {};
            var sampleY = {};

            for (var index in results) {
               var result = JSON.parse(results[index].result)

               insertSampleValue(sampleX, result['Load'], result[x_axisValue]);
               insertSampleValue(sampleY, result['Load'], result[y_axisValue]);
            }

            var data = [];

            for (var key in sampleX) {

               var resultX = 0;

               for (var value in sampleX[key]) {
                  resultX += sampleX[key][value];
               }

               var resultY = 0;

               for (var value in sampleY[key]) {
                  resultY += sampleY[key][value];
               }

               const sample = {
                  x: resultX / sampleX[key].length,
                  y: resultY / sampleY[key].length
               }

               data.push(sample);

               // Label
               x_axisArray.push(resultX / sampleX[key].length);
            }

            datasets.push({
               label: "Hue", // Simulation name
               backgroundColor: 'rgb(255, 99, 132)',
               borderColor: 'rgb(255, 99, 132)',
               data: data,
               fill: false,
            })
         }

         // Plot chart
         var canvas = document.createElement('canvas');
         canvas.className = 'my-5';
         var buttonGroup = document.getElementById("btn-group");
         buttonGroup.insertBefore(canvas, buttonGroup.childNodes[0]);

         var chart = new Chart(canvas, {
            type: 'line',
            data: {
               labels: x_axisArray,
               datasets: datasets
            },
            options: {
               responsive: true,
               tooltips: {
                  mode: 'index',
                  intersect: false,
               },
               hover: {
                  mode: 'nearest',
                  intersect: true
               },
               scales: {
                  xAxes: [{
                     display: true,
                     scaleLabel: {
                        display: true,
                        labelString: x_axisValue
                     }
                  }],
                  yAxes: [{
                     display: true,
                     scaleLabel: {
                        display: true,
                        labelString: y_axisValue
                     }
                  }]
               }
            }
         });
      }

      function insertSampleValue(array, key, value) {
         if (array[key] === undefined) {
            array[key] = [];
         }

         array[key].push(value);
      }
   </script>
</body>

</html>