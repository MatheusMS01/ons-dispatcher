<!DOCTYPE html>
<html>
<head>
  <% include ../template/head.ejs %>
</head>


<body>
  <header>
    <% include ../template/header.ejs %>
  </header>

  <div id="wrapper">

    <div class="navbar-default sidebar" role="navigation">
      <div class="sidebar-nav navbar-collapse">
        <ul class="nav in" id="side-menu">
          <li>
            <a href="simulation-groups" ><i class="glyphicon glyphicon-stats"></i> Simulation Groups</a>
            <ul class="nav nav-second-level collapse in">
              <li>
                <a href="#"><span id="executing-badge" class="badge">5</span> Executing</a>
              </li>
              <li>
                <a href="#"><span id="finished-badge" class="badge">0</span> Finished</a>
              </li>
            </ul>
          </li>
          <li>
            <a href="workers"><i class="glyphicon glyphicon-fire"></i> Workers</a>
          </li>
        </ul>
      </div>
    </div>

    <div id="page-wrapper" style="min-height: 898px;">
      <div class="row">
        <div class="col-lg-12">
          <h1 class="page-header">Simulation Groups</h1>
        </div>

        <div>
          <div class="col-lg-12">
            <h2 class="page-header">Executing</h2>
          </div>
          <input id="search-executing" class="form-control" onkeyup="searchTable(this)" placeholder="Search by Simulation Group">
          <table class='table table-hover table-striped table-bordered'>
            <thead>
              <tr>
                <th style='width:20%'>Simulation Group</th>
                <th style='width:20%'>Remaining Instances</th>
                <th style='width:10%'>Seed Amount</th>
                <th style='width:10%'>Priority</th>
                <th>Start Time</th>
                <th style='width:10%'></th>
              </tr>
            </thead>
            <tbody id="tb_executing"></tbody>
          </table>

          <div class="col-lg-12">
            <h2 class="page-header">Finished</h2>
          </div>
          <input id="search-finished" class="form-control" onkeyup="searchTable(this)" placeholder="Search by Simulation Group">
          <table class='table table-hover table-striped table-bordered'>
            <thead>
              <tr>
                <th style='width:20%'>Simulation Group</th>
                <th style='width:10%'>Seed Amount</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th style='width:10%'></th>
              </tr>
            </thead>
            <tbody id="tb_finished"></tbody>
          </table>

          <div class='my-5'>
            <a href='/new_simulation' class='btn btn-primary btn-lg active text-uppercase' role='button' aria-pressed='true'><span class="glyphicon glyphicon-plus"></span> New</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function monitor() {

      listSimulationGroups();
      setInterval( listSimulationGroups, 5000 );
    }

    function listSimulationGroups() {

      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function () {
        if ( this.readyState == 4 && this.status == 200 ) {

          const simulationGroups = JSON.parse( xhttp.response );

          listExecutingSimulationGroups( simulationGroups );
          var executingInput = document.getElementById( 'search-executing' );
          searchTable( executingInput );

          listFinishedSimulationGroups( simulationGroups );
          var finishedInput = document.getElementById( 'search-finished' );
          searchTable( finishedInput );

          updateRemainingInstances( simulationGroups );

          $( '[data-toggle=confirmation]' ).confirmation( { rootSelector: '[data-toggle=confirmation]' } );

          $( '[name=Cancel]' ).on( 'confirmed.bs.confirmation', function () {
            $.post( '/cancel', { _simulationGroup: $( this ).closest( 'tr' ).attr( 'id' ) },
              () => {
                location.reload();
              } );
          } );

          $( '[name=Remove]' ).on( 'confirmed.bs.confirmation', function () {
            $.post( '/remove', { _simulationGroup: $( this ).closest( 'tr' ).attr( 'id' ) },
              () => {
                location.reload();
              } );
          } );
        }

      };

      xhttp.open( "GET", "/api/get_simulation_groups", true );
      xhttp.send();
    }

    function listExecutingSimulationGroups( simulationGroups ) {

      const tb = document.getElementById( 'tb_executing' );

      while ( tb.firstChild ) {
        tb.removeChild( tb.firstChild );
      }

      for ( var idx in simulationGroups ) {

        if ( simulationGroups[idx].state === 0 ) {

          var tr = document.createElement( 'tr' );
          tr.id = simulationGroups[idx]._id;

          var tdName = document.createElement( 'td' );

          var form = document.createElement( 'form' );
          form.method = 'post';
          form.action = '/simulation_group/' + simulationGroups[idx]._id;

          var input = document.createElement( 'input' );
          input.type = 'submit';
          input.className = 'btn btn-link p-0'
          input.value = simulationGroups[idx].name;

          form.appendChild( input );
          tdName.appendChild( form );

          var tdRemainingInstances = document.createElement( 'td' );
          tdRemainingInstances.id = 'tdri_' + simulationGroups[idx]._id;

          var tdSeedAmount = document.createElement( 'td' );
          tdSeedAmount.innerHTML = simulationGroups[idx].seedAmount;

          var tdPriority = document.createElement( 'td' );
          tdPriority.innerHTML = simulationGroups[idx].priority;

          var tdStartTime = document.createElement( 'td' );
          tdStartTime.innerHTML = new Date( simulationGroups[idx].startTime );

          var tdCancel = document.createElement( 'td' );

          var btn = document.createElement( 'button' );
          btn.className = 'btn btn-large btn-danger';
          btn.setAttribute( 'data-toggle', 'confirmation' );
          btn.setAttribute( 'data-popout', 'true' );
          btn.setAttribute( 'data-singleton', 'true' );
          btn.name = 'Cancel';

          btn.innerHTML = '<span class=\'glyphicon glyphicon-remove\'></span> Cancel'

          tdCancel.appendChild( btn );

          tr.appendChild( tdName );
          tr.appendChild( tdRemainingInstances );
          tr.appendChild( tdSeedAmount );
          tr.appendChild( tdPriority );
          tr.appendChild( tdStartTime );
          tr.appendChild( tdCancel );

          tb.appendChild( tr );
        }
      }
    }

    function listFinishedSimulationGroups( simulationGroups ) {

      const tb = document.getElementById( 'tb_finished' );

      while ( tb.firstChild ) {
        tb.removeChild( tb.firstChild );
      }

      for ( var idx in simulationGroups ) {

        if ( simulationGroups[idx].state === 1 ) {

          var tr = document.createElement( 'tr' );
          tr.id = simulationGroups[idx]._id;

          var tdName = document.createElement( 'td' );

          var form = document.createElement( 'form' );
          form.method = 'post';
          form.action = '/simulation_group/' + simulationGroups[idx]._id;

          var input = document.createElement( 'input' );
          input.type = 'submit';
          input.className = 'btn btn-link p-0'
          input.value = simulationGroups[idx].name;

          form.appendChild( input );
          tdName.appendChild( form );

          var tdSeedAmount = document.createElement( 'td' );
          tdSeedAmount.innerHTML = simulationGroups[idx].seedAmount;

          var tdStartTime = document.createElement( 'td' );
          tdStartTime.innerHTML = new Date( simulationGroups[idx].startTime );

          var tdEndTime = document.createElement( 'td' );
          tdEndTime.innerHTML = new Date( simulationGroups[idx].endTime );

          var tdRemove = document.createElement( 'td' );

          var btn = document.createElement( 'button' );
          btn.className = 'btn btn-large btn-danger';
          btn.setAttribute( 'data-toggle', 'confirmation' );
          btn.setAttribute( 'data-popout', 'true' );
          btn.setAttribute( 'data-singleton', 'true' );
          btn.name = 'Remove';

          btn.innerHTML = '<span class=\'glyphicon glyphicon-remove\'></span> Remove'

          tdRemove.appendChild( btn );

          tr.appendChild( tdName );
          tr.appendChild( tdSeedAmount );
          tr.appendChild( tdStartTime );
          tr.appendChild( tdEndTime );
          tr.appendChild( tdRemove );

          tb.appendChild( tr );
        }
      }
    }

    function updateRemainingInstances( simulationGroups ) {

      for ( var idx in simulationGroups ) {

        if ( simulationGroups[idx].state === 0 ) {

          var xhttp = new XMLHttpRequest();
          xhttp.onreadystatechange = function () {
            if ( this.readyState == 4 && this.status == 200 ) {
              document.getElementById( 'tdri_' + simulationGroups[idx]._id ).innerHTML = JSON.parse( xhttp.responseText ).result;
            }
          };
          xhttp.open( 'GET', '/api/get_remaining_instances_from_group/' + simulationGroups[idx]._id, true );
          xhttp.send();
        }
      }
    }

    window.onload = monitor;

    function searchTable( input ) {

      var table = input.nextElementSibling;
      var tr = table.getElementsByTagName( "tr" );
      var filter = input.value.toUpperCase();

      // Loop through all table rows, and hide those who don't match the search query
      for ( i = 0; i < tr.length; i++ ) {
        td = tr[i].getElementsByTagName( "td" )[0];
        if ( td ) {
          var text = td.firstChild.firstChild.value;
          if ( text.toUpperCase().indexOf( filter ) > -1 ) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }
      }
    }
  </script>

  <script src='../js/sb-admin-2.js'></script>

</body>

</html>
<footer>
  <% include ../template/footer.ejs %>
</footer>